# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Maintainer: Lars Kanis <lars@greiz-reinsdorf.de>

_realname=postgresql
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-client")
pkgver=12.0
pkgrel=1
arch=('any')
url="https://www.postgresql.org/"
license=('custom:PostgreSQL')
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-gcc-libs"
             "${MINGW_PACKAGE_PREFIX}-gettext"
             "${MINGW_PACKAGE_PREFIX}-libxml2"
             "${MINGW_PACKAGE_PREFIX}-libxslt"
             "${MINGW_PACKAGE_PREFIX}-openssl"
             "${MINGW_PACKAGE_PREFIX}-python2"
             #"${MINGW_PACKAGE_PREFIX}-readline"
             "${MINGW_PACKAGE_PREFIX}-tcl"
             #"${MINGW_PACKAGE_PREFIX}-wineditline"
             "${MINGW_PACKAGE_PREFIX}-zlib")
options=('staticlibs' 'strip')
source=("https://ftp.postgresql.org/pub/source/v${pkgver}/postgresql-${pkgver}.tar.bz2"
        postgresql-12.0-mingw-link.patch
        postgresql-9.5.1-pl-perl.patch
        postgresql-9.5.1-pl-python.patch
        postgresql-9.4.1-pl-tcl.patch
        postgresql-9.4.1-mingw-enable-readline.patch)
sha256sums=('cda2397215f758b793f741c86be05468257b0e6bcb1a6113882ab5d0df0855c6'
            '607217b422349770d25af20f88e4a7925e68bb934232dff368c2ee59f24249a4'
            '57c1e9b75c042af591b05b9dda60e6327b5c364bb5adc2675da8a48b47e11b81'
            '1afbe207b0fe8c4178cc3f8cb4e3923c7c000207d22ec4f3875d6358b312a1d5'
            'ab9c42374b4e8a01b598810b19b583d9ee7bf5c43c39c019f66b62aacac38926'
            '51c72fbd380d23cf944165405221912a277b9be99e285479772b39cacbbf384f')

prepare() {
  cd ${srcdir}/postgresql-${pkgver}
  patch -p1 -i ${srcdir}/postgresql-12.0-mingw-link.patch
  patch -p1 -i ${srcdir}/postgresql-9.5.1-pl-perl.patch
  patch -p1 -i ${srcdir}/postgresql-9.5.1-pl-python.patch
  patch -p1 -i ${srcdir}/postgresql-9.4.1-pl-tcl.patch
  #patch -p1 -i ${srcdir}/postgresql-9.4.1-mingw-enable-readline.patch

  autoreconf -fiv
}

build() {
  [[ -d "${srcdir}/build-${CARCH}" ]] && rm -rf "${srcdir}/build-${CARCH}"
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  export PYTHON=${MINGW_PREFIX}/bin/python2
  ../postgresql-${pkgver}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --with-openssl \
    --enable-thread-safety \
    --enable-integer-datetimes \
    --enable-nls \
    --disable-rpath \
    --with-ldap \
    --with-libxml \
    --with-libxslt \
    --with-python \
    --without-perl \
    --with-tcl \
    --with-tclconfig=${MINGW_PREFIX}/lib
    #--with-libedit-preferred

  # Make DLL definition file visible during each arch build
  ln -s "${srcdir}/postgresql-${pkgver}/src/interfaces/libpq/libpqdll.def" src/interfaces/libpq/
  ln -s "${srcdir}/postgresql-${pkgver}/src/interfaces/ecpg/ecpglib/libecpgdll.def" src/interfaces/ecpg/ecpglib/
  ln -s "${srcdir}/postgresql-${pkgver}/src/interfaces/ecpg/pgtypeslib/libpgtypesdll.def" src/interfaces/ecpg/pgtypeslib/
  ln -s "${srcdir}/postgresql-${pkgver}/src/interfaces/ecpg/compatlib/libecpg_compatdll.def" src/interfaces/ecpg/compatlib/

  #for dir in src/interfaces src/bin/pg_config src/bin/psql src/bin/pg_dump; do
  #  make -C ${dir}
  #done
  make

  rm -rf ${srcdir}${MINGW_PREFIX}

  make -j1 DESTDIR=${srcdir} install

  # DLLs are duplicated in in bin and lib, but needed in bin only
  rm -rf ${srcdir}${MINGW_PREFIX}/lib/*.dll
}

package_postgresql() {
  pkgdesc="PostgreSQL server and client (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libxslt"
           "${MINGW_PACKAGE_PREFIX}-postgresql-client"
           "${MINGW_PACKAGE_PREFIX}-python2"
           "${MINGW_PACKAGE_PREFIX}-tcl"
           "${MINGW_PACKAGE_PREFIX}-zlib")

  cd ${srcdir}${MINGW_PREFIX}

  files="
    bin/initdb.exe
    bin/pg_archivecleanup.exe
    bin/pgbench.exe
    bin/pg_checksums.exe
    bin/pg_config
    bin/pg_controldata.exe
    bin/pg_ctl.exe
    bin/pg_resetwal.exe
    bin/pg_rewind.exe
    bin/pg_test_fsync.exe
    bin/pg_test_timing.exe
    bin/pg_upgrade.exe
    bin/pg_waldump.exe
    bin/postgres.exe
    bin/postmaster.exe

    include/postgresql/server
    lib/libpgcommon*
    lib/libpgport*
    lib/libpostgres.*
    lib/postgresql/pgxs/*

    lib/postgresql/*.dll

    share/locale/*/LC_MESSAGES/initdb-*.mo
    share/locale/*/LC_MESSAGES/pg_archivecleanup-*.mo
    share/locale/*/LC_MESSAGES/pg_checksums-*.mo
    share/locale/*/LC_MESSAGES/pg_config-*.mo
    share/locale/*/LC_MESSAGES/pg_controldata-*.mo
    share/locale/*/LC_MESSAGES/pg_ctl-*.mo
    share/locale/*/LC_MESSAGES/pg_resetwal-*.mo
    share/locale/*/LC_MESSAGES/pg_rewind-*.mo
    share/locale/*/LC_MESSAGES/pg_test_fsync-*.mo
    share/locale/*/LC_MESSAGES/pg_test_timing-*.mo
    share/locale/*/LC_MESSAGES/pg_upgrade-*.mo
    share/locale/*/LC_MESSAGES/pg_waldump-*.mo
    share/locale/*/LC_MESSAGES/plpgsql-*.mo
    share/locale/*/LC_MESSAGES/plpython-*.mo
    share/locale/*/LC_MESSAGES/pltcl-*.mo
    share/locale/*/LC_MESSAGES/postgres-*.mo

    share/postgresql/errcodes.txt
    share/postgresql/extension/*
    share/postgresql/timezone/*
    share/postgresql/timezonesets/*
    share/postgresql/tsearch_data
    share/postgresql/*.sql
    share/postgresql/*.conf.sample
    share/postgresql/postgres.bki
    share/postgresql/postgres.description
    share/postgresql/postgres.shdescription
    share/postgresql/sql_features.txt
  "
  for fil in $files; do
    dir=${fil%/*}
    mkdir -p "${pkgdir}/${MINGW_PREFIX}/${dir}"
    mv ${fil} "${pkgdir}/${MINGW_PREFIX}/${dir}/"
  done
}

package_postgresql-client() {
  pkgdesc="Front-end programs and libraries for use with PostgreSQL (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-gettext"
           "${MINGW_PACKAGE_PREFIX}-gcc-libs"
           "${MINGW_PACKAGE_PREFIX}-libxml2"
           "${MINGW_PACKAGE_PREFIX}-openssl"
           "winpty")

  cd ${srcdir}${MINGW_PREFIX}

  files="
    bin/clusterdb.exe
    bin/createdb.exe
    bin/createuser.exe
    bin/dropdb.exe
    bin/dropuser.exe
    bin/ecpg.exe
    bin/pg_basebackup.exe
    bin/pg_dump.exe
    bin/pg_dumpall.exe
    bin/pg_isready.exe
    bin/pg_receivewal.exe
    bin/pg_recvlogical.exe
    bin/pg_restore.exe
    bin/psql.exe
    bin/reindexdb.exe
    bin/vacuumdb.exe

    bin/libpq.dll
    bin/libpgtypes.dll
    bin/libecpg_compat.dll
    bin/libecpg.dll

    include/ecpg*.h
    include/libpq-events.h
    include/libpq-fe.h
    include/libpq/libpq-fs.h
    include/pg_config*.h
    include/postgres_ext.h
    include/postgresql/internal/*
    include/postgresql/informix/esql
    include/pgtypes*.h
    include/sql3types.h
    include/sqlca.h
    include/sqlda-compat.h
    include/sqlda-native.h
    include/sqlda.h

    lib/libecpg.*
    lib/libecpg_compat.*
    lib/libpgfeutils.*
    lib/libpgtypes.*
    lib/libpq.*
    lib/pkgconfig

    share/locale/*/LC_MESSAGES/ecpg-*.mo
    share/locale/*/LC_MESSAGES/ecpglib6-*.mo
    share/locale/*/LC_MESSAGES/libpq5-*.mo
    share/locale/*/LC_MESSAGES/pg_basebackup-*.mo
    share/locale/*/LC_MESSAGES/pg_dump-*.mo
    share/locale/*/LC_MESSAGES/pgscripts-*.mo
    share/locale/*/LC_MESSAGES/psql-*.mo

    share/postgresql/psqlrc.sample
  "
  for fil in $files; do
    dir=${fil%/*}
    mkdir -p "${pkgdir}/${MINGW_PREFIX}/${dir}"
    mv ${fil} "${pkgdir}/${MINGW_PREFIX}/${dir}/"
  done

  # Use winpty-git script to invoke utilities. Please don't move this into a patch as
  # hopefully one day we won't need this hack.
  for f in clusterdb createdb createuser dropdb dropuser pg_basebackup pg_dump pg_dumpall pg_receivewal pg_restore psql reindexdb vacuumdb; do
    mv "${pkgdir}"${MINGW_PREFIX}/bin/${f}.exe "${pkgdir}"${MINGW_PREFIX}/bin/${f}_exe
    _exename="${f}"
    echo "#!/usr/bin/env bash" > "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
    echo '/usr/bin/winpty "$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" "$@"' >> "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
    mv "${pkgdir}"${MINGW_PREFIX}/bin/${f}_exe "${pkgdir}"${MINGW_PREFIX}/bin/${f}.exe
  done
}

# NOTE: In order to avoid lost files from packaging, check that the install directory is empty after makepkg by running:
#       find src/mingw64/ -type f

package_mingw-w64-i686-postgresql() {
  package_postgresql
}

package_mingw-w64-i686-postgresql-client() {
  package_postgresql-client
}

package_mingw-w64-x86_64-postgresql() {
  package_postgresql
}

package_mingw-w64-x86_64-postgresql-client() {
  package_postgresql-client
}
